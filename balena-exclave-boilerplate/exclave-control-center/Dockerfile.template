# base-image for node on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/#dockerfile-templates
# and about balena base images here: https://www.balena.io/docs/reference/base-images/base-images/
# Only if using balenaEngine to build, deploy or push to application on balenaCloud
# Replace %%BALENA_MACHINE_NAME%% with your machine name instead if using Docker daemon
FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine-node:12-build

# build args (override with --build-arg NAME=VAL)
ARG RUST_VERSION=1.31
ARG EXCLAVE_VERSION=v0.2.6

# Uncomment if balenaCLI is not needed in tests
# ARG BALENA_CLI_VERSION=12.37.0

# hadolint ignore=DL3008, added nano for debugging, remove in final build
RUN apk add --no-cache \
    git \
    ca-certificates \
    rust \
    cargo \
    musl-dev 

# set the SHELL option -o pipefail before RUN with a pipe in
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# add rust to path
ENV PATH /root/.cargo/bin:${PATH}

WORKDIR /usr/src/exclave

# clone & build exclave
RUN git clone https://github.com/balena-io-playground/exclave . && \
    git checkout ${EXCLAVE_VERSION} && \
    cargo build 

# install balena cli if needed
# RUN npm install balena-cli@${BALENA_CLI_VERSION} -g --production --unsafe-perm

# To keep things simpler, everything else needed for tests is installed in /usr/src/core/


# Uncomment following lines if (private) NPM packages are needed to be installed
# COPY package* /usr/src/core/

# NPM install + Using .npmrc stored in .balena directory to install NPM packages
# RUN res=0; ( cp /run/secrets/.npmrc /usr/src/core/ && npm install --prefix /usr/src/core/ ) || res=1; rm /usr/src/core/.npmrc; exit $res

# OR just a simple npm install
# RUN npm install

# copy source files
COPY . /usr/src/core/

# enable execute permissions for scripts if any
RUN chmod +x /usr/src/core/entry.sh && \
    chmod +x /usr/src/core/logic/scripts/*.sh && \
    chmod +x /usr/src/core/logic/scripts/*.bash

CMD ["target/debug/exclave","-c", "../core/tests"]

VOLUME /images
